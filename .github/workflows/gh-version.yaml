name: Auto-version Grasshopper Files

on:
  push:
    paths:
      - 'GrasshopperFiles/**.gh*'

permissions:
  contents: write

jobs:
  update-version:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '7.0.x'
          cache: true

      - name: Install GhVersionManager as .NET tool
        run: dotnet tool install --global GhVersionManager --version 1.0.4-beta

      - name: Add dotnet tools to PATH
        run: echo "$env:USERPROFILE\.dotnet\tools" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        shell: pwsh

      - name: Determine version bump
        id: version
        run: |
          $msg = "${{ github.event.head_commit.message }}"
          if ($msg -match 'BREAKING' -or $msg -match 'MAJOR') {
            echo "bump=major" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
          } elseif ($msg -match 'PATCH' -or $msg -match 'FIX' -or $msg -match 'BUG') {
            echo "bump=patch" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
          } else {
            echo "bump=minor" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
          }
        shell: pwsh

      - name: Update version in changed files
        shell: pwsh
        run: |
          $bump = "${{ steps.version.outputs.bump }}"
          $files = git diff --name-only ${{ github.event.before }} ${{ github.sha }} | Where-Object { $_ -like 'GrasshopperFiles/*.gh*' }
          foreach ($file in $files) {
            try {
              Write-Host "Processing $file"
              if (-not (Test-Path $file)) { continue }
              $current = ghversionmanager $file
              if ($current -match '^(\d+)\.(\d+)\.(\d+)$') {
                $major = [int]$matches[1]
                $minor = [int]$matches[2]
                $patch = [int]$matches[3]
                switch ($bump) {
                  "major" { $major++; $minor=0; $patch=0 }
                  "minor" { $minor++; $patch=0 }
                  "patch" { $patch++ }
                }
                $newVersion = "$major.$minor.$patch"
                ghversionmanager $file -v $newVersion
                git add $file
              }
            } catch {
              Write-Host "Error processing ${file}: ${_}"
            }
          }
          git status

      - name: Commit and push version bump
        if: success()
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git commit -m "ci: bump version panel in Grasshopper files [skip ci]" || echo "No changes to commit"
          git pull --rebase
          git push
        shell: pwsh