name: Auto-version Grasshopper Files

on:
  push:
    paths:
      - 'GrasshopperFiles/**.gh*'

jobs:
  update-version:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install NuGet CLI
        run: choco install nuget.commandline --no-progress
        shell: pwsh

      - name: Download GhVersionManager package
        run: |
          nuget install GhVersionManager -Version 1.0.0-beta -OutputDirectory ./tools
        shell: pwsh

      - name: Determine version bump
        id: version
        run: |
          $msg = "${{ github.event.head_commit.message }}"
          if ($msg -match 'BREAKING' -or $msg -match 'MAJOR') {
            echo "bump=major" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
          } elseif ($msg -match 'PATCH' -or $msg -match 'FIX' -or $msg -match 'BUG') {
            echo "bump=patch" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
          } else {
            echo "bump=minor" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
          }
        shell: pwsh

      - name: Update version in changed files
        shell: pwsh
        run: |
          $exe = Get-ChildItem -Path ./tools/GhVersionManager.1.0.0-beta -Filter GhVersionManager.exe -Recurse | Select-Object -First 1
          if (-not $exe) { throw "GhVersionManager.exe not found!" }
          $bump = "${{ steps.version.outputs.bump }}"
          $files = git diff --name-only ${{ github.event.before }} ${{ github.sha }} | Where-Object { $_ -like 'GrasshopperFiles/*.gh*' }
          foreach ($file in $files) {
            $current = & $exe.FullName $file
            if ($current -match '^(\d+)\.(\d+)\.(\d+)$') {
              $major = [int]$matches[1]
              $minor = [int]$matches[2]
              $patch = [int]$matches[3]
              switch ($bump) {
                "major" { $major++; $minor=0; $patch=0 }
                "minor" { $minor++; $patch=0 }
                "patch" { $patch++ }
              }
              $newVersion = "$major.$minor.$patch"
              & $exe.FullName $file -v $newVersion
              git add $file
            }
          }

      - name: Commit and push version bump
        if: success()
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git commit -m "ci: bump version panel in Grasshopper files [skip ci]" || echo "No changes to commit"
          git push
        shell: pwsh